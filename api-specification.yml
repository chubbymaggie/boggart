swagger: '2.0'
info:
  description: |
    Official documentation for Hulk's RESTful API.
  version: '1.0'
  title: Hulk - RESTful API Specification
  contact:
    name: Hulk on GitHub
    url: https://github.com/squaresLab/Hulk
host: localhost
basePath: /v1

tags:
  - name: configuration
    description: All operations related to the server configuration
  - name: mutations
    description: All operations related to the discovery of mutations
  - name: mutants
    description: All operations related to mutants


###############################################################################

definitions:
  TransformationSchema:
    type: object
    required:
      - match
      - rewrite
    properties:
      match:
        type: string
        description: The Rooibos matching pattern that should be used to
          identify mutation targets in the source code.
        example: "if (:[1])"
      rewrite:
        type: string
        description: The Rooibos rewrite pattern that should be used to
          mutate identified mutation targets.
        example: "if (!(:[1]))"

  Mutant:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: The GUID of the mutant.
        example: 30dd879c-ee2f-11db-8314-0800200c9a66
      parent:
        type: string
        description: The name of the BugZoo snapshot that was mutated.
        example: manybugs:python:69223-69224

  Language:
    type: object
    required:
      - name
      - file-endings
    properties:
      name:
        type: string
        description: The name of the language.
        example: Python
      file-endings:
        type: array
        items:
          type: string
          description: An acceptable file ending for this language.
          example: '.py'

  Operator:
    type: object
    required:
      - name
      - languages
      - transformations
    properties:
      name:
        type: string
        description: A unique identifier for this operator.
        example: NEGATE_IF_CONDITION_CSTYLE
      languages:
        type: array
        items:
          $ref: '#/definitions/Language'
      transformations:
        type: array
        items:
          $ref: '#/definitions/TransformationSchema'

################################################################################

paths:
  /operators:
    get:
      summary: List of registered mutation operators.
      description: >-
        Produces a list of all the mutation operators that are registered with
        this server given by their unique identifiers.
      tags:
        - configuration
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
              description: The unique identifier of the mutation operator.
              example: NEGATE_IF_CONDITION_CSTYLE


  /operators/${id}:
    get:
      summary: Description of a mutation operator.
      description: >-
        Produces a description of a mutation operator that is associated with
        a given unique identifier.
      tags:
        - configuration
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: The unique identifier of the mutation operator.
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Operator'
        404:
          description: Operator not found.


  /languages:
    get:
      summary: List of registered languages.
      description: >-
        Produces a list of all of the languages that are known to the server
        and may be subject to mutation.
      tags:
        - configuration
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
              description: The name of the language.
              example: Python


  /mutations:
    get:
      summary: All known mutations to a given body of text.
      description: >-
        Produces a list of all known mutations, satisying an optional set of
        criteria, that can be applied to a given body of text.
      tags:
        - mutations
      produces:
        - application/json
      responses:
        200:
          description: OK.
        404:
          description: File not found.


  /mutations/${snapshot}/${filepath}:
    get:
      summary: All known mutations at a given file.
      description: >-
        Produces a list of all known mutations, satisfying an optional set of
        criteria, at a given file belonging to a BugZoo snapshot.
      tags:
        - mutations
      produces:
        - application/json
      parameters:
        - in: path
          name: snapshot
          type: string
          description: >-
            The name of the BugZoo snapshot.
          required: true
        - in: path
          name: filepath
          type: string
          description: >-
            The path to the file. Relative paths will be interpreted relative
            to the source directory for the snapshot.
          required: true
      responses:
        200:
          description: OK.
        404:
          description: File not found.


  /mutants:
    get:
      summary: List of all registered mutants.
      description: >-
        Produces a list of all mutants that have been registered with the
        server. When the server is shutdown, all registered mutants will
        be discarded (i.e., mutants are ephemeral).
      tags:
        - mutants
      produces:
        - application/json
      responses:
        200:
          description: OK.
          schema:
            type: array
            description: >-
              A list of the GUIDs of the mutants registered with this server.
            items:
              type: string
              description: The GUID of the mutant.
              example: 30dd879c-ee2f-11db-8314-0800200c9a66

    post:
      summary: Constructs a new mutant.
      description: >-
        Constructs a new mutant by applying a given mutation to a specified
        BugZoo snapshot.
      tags:
        - mutants
      produces:
        - application/json
      parameters:
        - in: body
          required: true
          name: Parameters
          schema:
            type: object
            properties:
              snapshot:
                type: string
                example: manybugs:python:69223-69224
                description: >-
                  The name of the BugZoo snapshot that should be mutated.
      responses:
        200:
          description: Mutant was created.
          schema:
            $ref: '#/definitions/Mutant'
        404:
          description: BugZoo snapshot was not found.


  /mutants/${id}:
    get:
      summary: Description of a mutant.
      description: >-
        Produces a description of a given mutant that is registered with this
        server.
      tags:
        - mutants
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: The GUID of the mutant.
          required: true
      responses:
        200:
          description: OK.
          schema:
            $ref: '#/definitions/Mutant'
        404:
          description: Mutant not found.

    delete:
      summary: Destroys a registered mutant.
      description: >-
        Destroys a registered mutant by destroying all of its associated
        resources (i.e., BugZoo files and Docker image) and removing it
        from the server.
      tags:
        - mutants
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: The GUID of the mutant.
          required: true
      responses:
        204:
          description: Mutant was destroyed.
        404:
          description: Mutant not found.
